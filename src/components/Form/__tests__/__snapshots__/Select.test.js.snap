// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`When using snapshots Select should render with an element children 1`] = `
.c0 {
  font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;
}

.c1.c1 .Select-control {
  opacity: 1;
  background-color: #ffffff;
  border-color: #c9cacc;
  border-width: 2px;
  border-radius: 0;
  box-shadow: none;
}

.c1.c1.is-focused .Select-control,
.c1.c1.is-focused:not(.is-open) > .Select-control {
  opacity: 1;
  background-color: #ffffff;
  border-color: #2196f3;
  box-shadow: none;
}

.c1.c1 .Select-placeholder {
  padding-left: 1.2rem;
  line-height: 3.8rem;
}

.c1.c1.Select--single .Select-value {
  padding-left: 1.2rem;
}

.c1.c1.Select--single .Select-value .Select-value-label {
  line-height: 3.8rem;
}

.c1.c1.Select--single.is-disabled {
  opacity: 0.6;
}

.c1.c1 .Select-input > input {
  padding: 0.1rem;
  line-height: 3.2rem;
}

.c1.c1 .Select-menu-outer {
  margin-top: 0;
  border-top-width: 0;
}

.c1.c1 .nameOption,
.c1.c1 .VirtualizedSelectOption {
  cursor: default;
  padding: 0.5rem 1rem;
  color: #101113;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.c1.c1 .nameOptionFocused,
.c1.c1 .VirtualizedSelectFocusedOption {
  color: #ffffff;
  background-color: #2196f3;
}

<span
  className="c0"
>
  <div>
    <div
      className="Select c1 is-clearable is-searchable Select--single"
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
      >
        <div
          className="Select-multi-value-wrapper"
          id="react-select-2--value"
        >
          <div
            className="Select-placeholder"
          >
            Select...
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-activedescendant="react-select-2--value"
              aria-expanded="false"
              aria-haspopup="false"
              aria-owns=""
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</span>
`;
